// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StudentListItems renders without crashing and matches the last snapshot 1`] = `
<StudentListItems
  filter=""
  onDeleteStudent={[Function]}
  onUpdateStudent={[Function]}
  students={
    Array [
      Object {
        "id": "1234",
        "lastName": "Billy Bob",
        "photo": Object {
          "bucketName": "resterapp-dev",
          "key": "e93ecbf0-ba96-4290-a906-5ea67e4c4a9f",
        },
        "skey": "8a80810d5dd89a3f015dd89ac8280000",
      },
      Object {
        "id": "503074",
        "lastName": "Albert Russell",
        "photo": Object {
          "bucketName": "resterapp-dev",
          "key": "e93ecbf0-ba96-4290-a906-5ea67e4c4a9f",
        },
        "skey": "8a80810d5dd89a3f015dd8a252800001",
      },
    ]
  }
>
  <div>
    <Table
      bordered={false}
      bsClass="table"
      condensed={true}
      hover={true}
      responsive={false}
      striped={true}
    >
      <table
        className="table table-striped table-condensed table-hover"
      >
        <thead
          className="studentListItemsHead"
        >
          <tr>
            <th>
              Name
            </th>
            <th>
              ID
            </th>
            <th>
              URL
            </th>
          </tr>
        </thead>
        <tbody
          className="studentListItemsBody"
        >
          <StudentListItem
            key="8a80810d5dd89a3f015dd89ac8280000"
            onDeleteStudent={[Function]}
            onUpdateStudent={[Function]}
            student={
              Object {
                "id": "1234",
                "lastName": "Billy Bob",
                "photo": Object {
                  "bucketName": "resterapp-dev",
                  "key": "e93ecbf0-ba96-4290-a906-5ea67e4c4a9f",
                },
                "skey": "8a80810d5dd89a3f015dd89ac8280000",
              }
            }
          >
            <tr>
              <td>
                Billy Bob
              </td>
              <td>
                1234
              </td>
              <td>
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={false}
                  vertical={false}
                >
                  <div
                    className="btn-group"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="edit"
                      onClick={[Function]}
                    >
                      <button
                        className="btn btn-default"
                        disabled={false}
                        id="edit"
                        onClick={[Function]}
                        type="button"
                      >
                        <Glyphicon
                          bsClass="glyphicon"
                          glyph="pencil"
                        >
                          <span
                            className="glyphicon glyphicon-pencil"
                          />
                        </Glyphicon>
                      </button>
                    </Button>
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="delete"
                      onClick={[Function]}
                    >
                      <button
                        className="btn btn-default"
                        disabled={false}
                        id="delete"
                        onClick={[Function]}
                        type="button"
                      >
                        <Glyphicon
                          bsClass="glyphicon"
                          glyph="trash"
                        >
                          <span
                            className="glyphicon glyphicon-trash"
                          />
                        </Glyphicon>
                      </button>
                    </Button>
                  </div>
                </ButtonGroup>
                <EditStudentModal
                  initialStudent={
                    Object {
                      "id": "1234",
                      "lastName": "Billy Bob",
                      "photo": Object {
                        "bucketName": "resterapp-dev",
                        "key": "e93ecbf0-ba96-4290-a906-5ea67e4c4a9f",
                      },
                      "skey": "8a80810d5dd89a3f015dd89ac8280000",
                    }
                  }
                  onHide={[Function]}
                  onSubmit={[Function]}
                  show={false}
                  submitButtonText="Save"
                  title="Edit Billy Bob"
                >
                  <div
                    className="static-modal"
                  >
                    <Modal
                      animation={true}
                      autoFocus={true}
                      backdrop={true}
                      bsClass="modal"
                      dialogClassName="custom-modal"
                      dialogComponentClass={[Function]}
                      enforceFocus={true}
                      keyboard={true}
                      manager={
                        ModalManager {
                          "add": [Function],
                          "containers": Array [],
                          "data": Array [],
                          "handleContainerOverflow": true,
                          "hideSiblingNodes": true,
                          "isTopModal": [Function],
                          "modals": Array [],
                          "remove": [Function],
                        }
                      }
                      onHide={[Function]}
                      renderBackdrop={[Function]}
                      restoreFocus={true}
                      show={false}
                    >
                      <Modal
                        autoFocus={true}
                        backdrop={true}
                        backdropClassName="modal-backdrop"
                        backdropTransitionTimeout={150}
                        containerClassName="modal-open"
                        dialogTransitionTimeout={300}
                        enforceFocus={true}
                        keyboard={true}
                        manager={
                          ModalManager {
                            "add": [Function],
                            "containers": Array [],
                            "data": Array [],
                            "handleContainerOverflow": true,
                            "hideSiblingNodes": true,
                            "isTopModal": [Function],
                            "modals": Array [],
                            "remove": [Function],
                          }
                        }
                        onEntering={[Function]}
                        onExited={[Function]}
                        onHide={[Function]}
                        renderBackdrop={[Function]}
                        restoreFocus={true}
                        show={false}
                        transition={[Function]}
                      />
                    </Modal>
                  </div>
                </EditStudentModal>
              </td>
            </tr>
          </StudentListItem>
          <StudentListItem
            key="8a80810d5dd89a3f015dd8a252800001"
            onDeleteStudent={[Function]}
            onUpdateStudent={[Function]}
            student={
              Object {
                "id": "503074",
                "lastName": "Albert Russell",
                "photo": Object {
                  "bucketName": "resterapp-dev",
                  "key": "e93ecbf0-ba96-4290-a906-5ea67e4c4a9f",
                },
                "skey": "8a80810d5dd89a3f015dd8a252800001",
              }
            }
          >
            <tr>
              <td>
                Albert Russell
              </td>
              <td>
                503074
              </td>
              <td>
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={false}
                  vertical={false}
                >
                  <div
                    className="btn-group"
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="edit"
                      onClick={[Function]}
                    >
                      <button
                        className="btn btn-default"
                        disabled={false}
                        id="edit"
                        onClick={[Function]}
                        type="button"
                      >
                        <Glyphicon
                          bsClass="glyphicon"
                          glyph="pencil"
                        >
                          <span
                            className="glyphicon glyphicon-pencil"
                          />
                        </Glyphicon>
                      </button>
                    </Button>
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      id="delete"
                      onClick={[Function]}
                    >
                      <button
                        className="btn btn-default"
                        disabled={false}
                        id="delete"
                        onClick={[Function]}
                        type="button"
                      >
                        <Glyphicon
                          bsClass="glyphicon"
                          glyph="trash"
                        >
                          <span
                            className="glyphicon glyphicon-trash"
                          />
                        </Glyphicon>
                      </button>
                    </Button>
                  </div>
                </ButtonGroup>
                <EditStudentModal
                  initialStudent={
                    Object {
                      "id": "503074",
                      "lastName": "Albert Russell",
                      "photo": Object {
                        "bucketName": "resterapp-dev",
                        "key": "e93ecbf0-ba96-4290-a906-5ea67e4c4a9f",
                      },
                      "skey": "8a80810d5dd89a3f015dd8a252800001",
                    }
                  }
                  onHide={[Function]}
                  onSubmit={[Function]}
                  show={false}
                  submitButtonText="Save"
                  title="Edit Albert Russell"
                >
                  <div
                    className="static-modal"
                  >
                    <Modal
                      animation={true}
                      autoFocus={true}
                      backdrop={true}
                      bsClass="modal"
                      dialogClassName="custom-modal"
                      dialogComponentClass={[Function]}
                      enforceFocus={true}
                      keyboard={true}
                      manager={
                        ModalManager {
                          "add": [Function],
                          "containers": Array [],
                          "data": Array [],
                          "handleContainerOverflow": true,
                          "hideSiblingNodes": true,
                          "isTopModal": [Function],
                          "modals": Array [],
                          "remove": [Function],
                        }
                      }
                      onHide={[Function]}
                      renderBackdrop={[Function]}
                      restoreFocus={true}
                      show={false}
                    >
                      <Modal
                        autoFocus={true}
                        backdrop={true}
                        backdropClassName="modal-backdrop"
                        backdropTransitionTimeout={150}
                        containerClassName="modal-open"
                        dialogTransitionTimeout={300}
                        enforceFocus={true}
                        keyboard={true}
                        manager={
                          ModalManager {
                            "add": [Function],
                            "containers": Array [],
                            "data": Array [],
                            "handleContainerOverflow": true,
                            "hideSiblingNodes": true,
                            "isTopModal": [Function],
                            "modals": Array [],
                            "remove": [Function],
                          }
                        }
                        onEntering={[Function]}
                        onExited={[Function]}
                        onHide={[Function]}
                        renderBackdrop={[Function]}
                        restoreFocus={true}
                        show={false}
                        transition={[Function]}
                      />
                    </Modal>
                  </div>
                </EditStudentModal>
              </td>
            </tr>
          </StudentListItem>
        </tbody>
      </table>
    </Table>
  </div>
</StudentListItems>
`;
